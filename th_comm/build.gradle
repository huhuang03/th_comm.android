plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}
apply plugin: 'signing'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task javadoc(type: Javadoc) {
    dependsOn 'assembleRelease'
    source = android.sourceSets.main.java.srcDirs
}

javadoc {
    options {
        encoding 'UTF-8'
        charSet 'UTF-8'
    }
}

// what is xx.doc.jar??
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId 'io.github.huhuang03'
                artifactId 'th_comm.android'
                version '0.0.1-rc.1'

                pom {
                    licenses {
                        license {
                            name='The Apache Software License, Version 2.0'
                            url='http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }


        repositories {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def mavenUser = properties.getProperty("maven.user")
            def mavenPassword = properties.getProperty("maven.password")

            if (mavenUser == null || mavenPassword == null) {
                logger.warn("Please config maven.user and maven.password in local.properties")
            }

            maven {
                url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username mavenUser
                    password mavenPassword
                }
            }
        }
    }


    signing {
        sign publishing.publications.release
    }
}


tasks.withType(Javadoc).all {
    excludes = ['**/*.kt']
}
